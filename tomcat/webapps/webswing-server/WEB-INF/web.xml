<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<filter>
		<filter-name>CORS Filter</filter-name>
		<filter-class>org.webswing.server.handler.CorsFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter>
		<filter-name>ShiroFilter</filter-name>
		<filter-class>org.apache.shiro.web.servlet.ShiroFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>

	<filter-mapping>
		<filter-name>CORS Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ShiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>

	<servlet>
		<description>AtmosphereServlet</description>
		<servlet-name>AtmosphereServlet</servlet-name>
		<servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
		<!-- Use it with mvn jetty:run -->
		<init-param>
			<param-name>org.atmosphere.cpr.packages</param-name>
			<param-value>org.webswing.server.handler</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.websocket.bufferSize</param-name>
			<param-value>1048576</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.websocket.maxTextMessageSize</param-name>
			<param-value>1048576</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.websocket.maxBinaryMessageSize</param-name>
			<param-value>1048576</param-value>
		</init-param>
		<init-param>
            <param-name>org.atmosphere.cpr.broadcaster.maxProcessingThreads</param-name>
            <param-value>10</param-value>
        </init-param>
		<init-param>
            <param-name>org.atmosphere.cpr.broadcaster.maxAsyncWriteThreads</param-name>
            <param-value>10</param-value>
        </init-param>
		<init-param>
            <param-name>org.atmosphere.cpr.broadcaster.shareableThreadPool</param-name>
            <param-value>true</param-value>
        </init-param>
		<load-on-startup>0</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet>
		<description>FileServlet</description>
		<servlet-name>FileServlet</servlet-name>
		<servlet-class>org.webswing.server.handler.FileServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<multipart-config>
			<file-size-threshold>5242880</file-size-threshold>
		</multipart-config>
	</servlet>
	<servlet>
		<description>LoginServlet</description>
		<servlet-name>LoginServlet</servlet-name>
		<servlet-class>org.webswing.server.handler.LoginServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>jersey-serlvet</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>org.codehaus.jackson.jaxrs,org.webswing.server.rest</param-value>
		</init-param>
		<init-param>
		    <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
		    <param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>jersey-serlvet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AtmosphereServlet</servlet-name>
		<url-pattern>/async/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>FileServlet</servlet-name>
		<url-pattern>/file</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>LoginServlet</servlet-name>
		<url-pattern>/login</url-pattern>
	</servlet-mapping>

	<listener>
		<listener-class>org.webswing.server.handler.StartupService</listener-class>
	</listener>

	<listener>
		<listener-class>org.webswing.server.handler.JmsService</listener-class>
	</listener>

	<listener>
		<listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.atmosphere.cpr.SessionSupport</listener-class>
	</listener>
	
	<context-param>
		<param-name>org.atmosphere.cpr.SessionSupport</param-name>
		<param-value>true</param-value>
	</context-param>
</web-app>